# name: Deploy Itrust

# on:
#   push:
#     branches: [ main ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup PHP
#       uses: shivammathur/setup-php@v2
#       with:
#         php-version: '8.3'
#         extensions: mbstring, xml, zip, mysql, curl
#         coverage: none

#     - name: Install dependencies
#       run: |
#         composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader

#     - name: Sync files to server
#       uses: appleboy/scp-action@v0.1.3
#       with:
#         host: ${{ secrets.SSH_HOST }}
#         username: 'root'
#         key: ${{ secrets.SSH_KEY }}
#         source: "./"
#         target: "/var/www/itrust-api/"
#         rm: true
#         strip_components: 1

#     - name: Run deployment commands
#       uses: appleboy/ssh-action@v0.1.8
#       with:
#         host: ${{ secrets.SSH_HOST }}
#         username: 'root'
#         key: ${{ secrets.SSH_KEY }}
#         script: |
#           cd /var/www/itrust-api
#           composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader
#           php artisan migrate --force
#           php artisan cache:clear
#           php artisan view:clear
#           php artisan config:cache
#           chown -R root:root /var/www/itrust-api
#           chmod -R 775 storage
#           chmod -R 775 bootstrap/cache


# name: Prod CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
# #  laravel-tests:
# #
# #    runs-on: ubuntu-latest
# #
# #    steps:
# #    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
# #      with:
# #        php-version: '8.1'
# #    - uses: actions/checkout@v3
# #    - name: Copy .env
# #      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
# #    - name: Install Dependencies
# #      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
# #    - name: Generate key
# #      run: php artisan key:generate
# #    - name: Directory Permissions
# #      run: chmod -R 777 storage bootstrap/cache
# #    - name: Copy .env.testing
# #      run: php -r "file_exists('.env.testing') || copy('.env', '.env.testing');"
# #    - name: Create Database
# #      run: |
# #        mkdir -p database
# #        touch database/database.sqlite
# #    - name: Run PHP code sniffer
# #      run: composer pint --stop-on-defect
# #    - name: Run PHPstan
# #      run: composer phpstan
# #    - name: Run tests (Unit and Feature tests) via PHPUnit
# #      env:
# #        DB_CONNECTION: sqlite
# #        DB_DATABASE: database/database.sqlite
# #      run: php artisan test --stop-on-defect

#   deploy:

#     runs-on: ubuntu-latest

#     if: github.event_name == 'push'

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: SSH and deploy to server
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: 'root'
#           key: ${{ secrets.SSH_KEY }}
#           # port: ${{ secrets.SSH_PORT }}
#           script: |
#             cd /var/www/itrust-api
#             git pull origin main
            
            





name: Production CLI

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY }}
        known_hosts: 'just-a-placeholder'

    - name: Rsync project files (safe mode)
      run: |
        rsync -avz --delete \
          -e "ssh -o StrictHostKeyChecking=no" \
          --exclude='.env' \
          --exclude='storage' \
          --exclude='.git' \
          --exclude='node_modules' \
          ./ root@${{ secrets.SSH_HOST }}:/var/www/itrust-api/

    - name: Run safe updates
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ secrets.SSH_HOST }} "
          cd /var/www/itrust-api

          # Pull updates safely
          git pull origin main

          # Install dependencies
          composer install --no-interaction --no-dev --optimize-autoloader
          
          # Run database migrations (skip if table exists)
          php artisan migrate:status | grep -q 'Pending' && php artisan migrate --force || echo 'No pending migrations'
          
          # Clear caches safely
          php artisan view:clear
          php artisan route:clear
          php artisan config:clear
          
          # Optimize
          php artisan optimize
          
          # Fix permissions (safe)
          chmod -R 775 storage bootstrap/cache
          chown -R www-data:www-data storage bootstrap/cache
        "